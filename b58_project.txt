CSCB58 Project File: Summer 2017

Team Member A
-------------
First Name: Jeffrey
Last Name: So
Student Number: 1003197104
UofT E-mail Address: jeffsh.so@mail.utoronto.ca


Team Member B
-------------
First Name: Ricky
Last Name: Chen
Student Number: 1003193876
UofT E-mail Address: utsc.chen@mail.utoronto.ca

Team Member C
-------------
First Name: Brandon
Last Name: Shewnarain
Student Number:1001515835
UofT E-mail Address: brandon.shewnarain@mail.utoronto.ca

Team Member D
-------------
First Name: Byron
Last Name:Leung
Student Number:1002489933
UofT E-mail Address:byron.leung@mail.utoronto.ca

Project Details
---------------
Project Title: 
Tentative

Project Description:
Knock off version of Bubble trouble:
- Player spawns at the bottom of the screen, can only move left/right
- Player can shoot projectiles only up
- Enemy (Bubble) spawns somewhere and bounces around the screen
- Projectile hit = enemy hp down? or score++
- Enemy bounces into player = gameover or life-- (3 lives?)
- Extra features: switches change what the enemy looks like? not sure yet

Video URL:

Code URL (please upload a copy of this file to your repository at the end of the project as well, it will
serve as a useful resource for future development):


Proposal
--------

What do you plan to have completed by the end of the first lab session?:
Enemy bounce around
Player spawn, player movement, player shoot

What do you plan to have completed by the end of the second lab session?:
Finish what wasnt done from part 1
Projectile to enemy calculations
Enemy to player calculations
Scoring
Lives?

What do you plan to have completed by the end of the third lab session?:
Be done

What is your backup plan if things don't work out as planned?
As a backup plan we may need to remove some features that don't work and focus on simpler things. If we have time afterwards , we can try to re-implement them

What hardware will you need beyond the DE2 board 
(be sure to e-mail Brian if it's anything beyond the basics to make sure there's enough to go around)
I think just the board and VGA monitor is enough. If we have enough time we might try to use some hardware to simulate the movement e.g. the joystick to move left and right
but for now, just the board and VGA

Motivations
-----------
How does this project relate to the material covered in CSCB58?:
We are coding in verilog, utilizing counters and displaying pixels like in the lab

Why is this project interesting/cool (for CSCB58 students, and for non CSCB58 students?):
Its a fun game to play.

Why did you personally choose this project?:
Its a fun game to play.

Attributions
------------
Provide a complete list of any external resources your project used (attributions should also be included in your
code).  

Updates
-------
March 11 - Start of the project: team formed, idea for the project chosen, features of implementation decided, started coding.

<Example update. Delte this and add your own updates after each lab session>
Week 1: We built the hardware and tested the sensors. The distance sensor we had intended to use didn't work as
expected (wasn't precise enough at further distances, only seems to work accurately within 5-10cm), so instead
we've decided to change the project to use a light sensor instead. Had trouble getting the FSM to work (kept
getting stuck in state 101, took longer to debug than expected), so we may not be able to add the
high score feature, have updated that in the project description as (optional).
